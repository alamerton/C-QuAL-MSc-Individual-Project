
import os
from openai import AzureOpenAI
from dotenv import load_dotenv

load_dotenv()

ANNOTATION_MODEL = "gpt-35-turbo-16k"

def annotate_with_gpt(
        discharge_summary,
        question,
        expected_answer,
        reason
        ):

    client = AzureOpenAI(
        azure_endpoint=os.getenv("AZURE_OPENAI_ENDPOINT"),
        api_key=os.getenv("AZURE_OPENAI_KEY"),
        api_version=os.getenv("AZURE_API_VERSION"),
    )

    system_message = """You are an expert medical professional tasked 
    with annotating a question-answer pair generated by a large language 
    model based on a discharge summary from the MIMIC-III database."""

    user_prompt = f"""
        Your task is to evaluate the provided model output in 
        response to a specific question associated with the 
        given discharge summaries.\nBy using the correct answer 
        also provided, you must score the answer as 0 or 1, based 
        on the following scoring instructions.\nScoring 
        Instructions:\n1. Assign 1 point if the answer is correct.
        \n2. Assign 0 points if the answer is either incorrect, or 
        if it falsely claims there is no answer when one exists 
        according to the discharge summaries.\n\n
        - Discharge Summaries:\n{discharge_summary}\n\n
        - Question: {question}\n\n
        - Correct Answer: {expected_answer}\n\n
        - Model Output:\n\n{reason}\n\n
        Output format:\nScore: {{score}}\nReasoning: {{explanation}}
        \n(Note: In your response please replace {{score}} with the 
        numerical score of 0 or 1, and provide a brief reasoning for
            the assigned score based on the evaluation criteria.)
    """

    response = client.chat.completions.create(
        model=ANNOTATION_MODEL,
        messages=[
            {"role": "system", "content": system_message},
            {"role": "user", "content": user_prompt},
        ],
        max_tokens=600,
        temperature=0,
    )

    return response.choices[0].message.content
